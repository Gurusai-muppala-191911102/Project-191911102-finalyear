# -*- coding: utf-8 -*-
"""paper4gurusaimuppala.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iCUCZMPqstnIFQH2sZsr_1tPzh5Wesjw
"""

from google.colab import drive
drive.mount('/content/gdrive')

file3 = open('/content/gdrive/MyDrive/projectfolder/CharlestonFeb28_2020.txt','r')

manual_file3 = open("/content/gdrive/MyDrive/projectfolder/manual_keywords1.txt",'r')

pip install rake-nltk

pip install nltk

pip install spacy

import nltk
nltk.download('stopwords')
nltk.download('punkt')
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize,sent_tokenize 
import math
import operator
from rake_nltk import Rake
from matplotlib import pyplot as plt  
import random
import time
r = Rake()
stop_words = set(stopwords.words('english'))

pip install summa

from summa import keywords

def main(file,manual_file):
  doc1 = file.read()
  data_manual = manual_file.read()
  manual_phrases = data_manual.split("\n")
  manual_content_words = []
  for i in manual_phrases:
    w = i.split(" ")
    for j in w:
      if j not in manual_content_words:
        manual_content_words.append(j)
  doc=""
  for i in doc1:
    if i.isalpha():
      i=i.lower()
      doc+=i
    else:
      doc+=i

  rake_content_words = []
  def rake_algorithm(data):
    r = Rake()
    r.extract_keywords_from_text(data)
    y=r.get_ranked_phrases()
    t=r.get_ranked_phrases_with_scores()
    for i in y:
      w = i.split(" ")
      for j in w:
        if j not in rake_content_words:
          rake_content_words.append(j)
  rake_algorithm(doc)

  CF_content_words=[]
  def CF_algo(doc):
    CF_keywords = keywords.keywords(doc, scores=True)
    for i in CF_keywords:
      if i[0] not in CF_content_words:
        CF_content_words.append(i[0])
  CF_algo(doc)
  similar_words_rake = []
  similar_words_CF=[]

  for i in CF_content_words:
    for j in manual_content_words:
      if i==j:
        if i not in similar_words_CF:
          similar_words_CF.append(i)
  for i in rake_content_words:
    for j in manual_content_words:
      if i==j:
        if i not in similar_words_rake:
          similar_words_rake.append(i)
  rake_similar = (len(similar_words_rake)/len(manual_content_words))*100
  CF_similar = (len(similar_words_CF)/len(manual_content_words))*100
  return [CF_similar,rake_similar]

res = main(file3,manual_file3)
print(res)

import numpy as np
import matplotlib.pyplot as plt
x=["doc1","doc2","doc3"]
y1 = [res1[0],res2[0],res3[0]]
y2 = [res1[1],res2[1],res3[1]]
plt.plot(x, y2,label="RAKE", color='g')
plt.plot(x, y1,label="CF", color='y')
plt.xlabel("documents")
plt.ylabel("percent of matched words")
plt.title('RAKE vs CF similarity')
plt.legend(loc='upper left')
plt.show();